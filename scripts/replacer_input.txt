=== PROCESSED: 2025-06-23 15:04:42 ===
SUCCESS Block 1: Updated /Users/stuart/repos/csl-parser/csl-parser/main/core/src/parser.ts
===

Perfect! Now I can see the issue. Looking at the code, the logic for throwing the malformed marker error is in the right place (lines 71-74), but let me trace through what happens with `<--- WRITE file="test.txt"--->`:

1. `line.startsWith(startDelim)` = true (line starts with `<---`)
2. Try to match with regex `/^<---(\w+)(\s+(.*))?--->$/`
3. The line is `<--- WRITE file="test.txt"--->`
4. This WILL NOT match because `(\w+)` expects word characters immediately after `<---`, but we have a space

So `markerMatch` should be null, and we should hit line 71-74 which checks if we're at top level and throws the error.

But the test is still failing, which means the error is not being thrown. Let me check if there's something wrong with the test output...

Wait! I just noticed something. In the test output, it shows the parser is processing multiple lines without throwing an error:

```
Line 1: "<--- WRITE file="test.txt"--->"
  State: null, insideTasks: false, currentOp: null
Line 2: "content"
  State: WRITE, insideTasks: false, currentOp: WRITE
```

How can we be in state WRITE on line 2 if line 1 should have thrown an error?

Let me look at the actual test case... The test is:

```typescript
assert.throws(
  () => parse(`${SD} WRITE file="test.txt"${ED}
content
${SD}END${ED}`),
  { message: 'Line 1: Malformed marker' }
);
```

So the first line is `<--- WRITE file="test.txt"--->` which should throw.

OH! I see the issue now. Look at the console output more carefully:

```
Line 1: "<---WRITE file="test.txt""
  State: null, insideTasks: false, currentOp: null
Line 1: "<--- WRITE file="test.txt"--->"
  State: null, insideTasks: false, currentOp: null
```

There are TWO different "Line 1" entries! This suggests the test is running multiple test cases, and we're seeing output from different tests mixed together.

The failing test is the one with a space: `<--- WRITE file="test.txt"--->`. This should throw but it's not.

Let me add some debug logging to understand what's happening:

<<<EXPLANATION>>>
Add debug logging to understand why the malformed marker error isn't being thrown

<<<FILE>>>
csl-parser/main/core/src/parser.ts

<<<SEARCH>>>
      } else {
        // Line starts with delimiter but doesn't match pattern
        if (!state || state === 'TASKS') {
          // At top level - this is an error
          throw new Error(`Line ${lineNum}: Malformed marker`);
        }
        // In content block - treat as literal content
      }
<<<REPLACE>>>
      } else {
        // Line starts with delimiter but doesn't match pattern
        console.log(`  Marker regex failed to match`);
        console.log(`  Current state: ${state}`);
        if (!state || state === 'TASKS') {
          // At top level - this is an error
          console.log(`  Throwing malformed marker error`);
          throw new Error(`Line ${lineNum}: Malformed marker`);
        }
        // In content block - treat as literal content
        console.log(`  In content block - treating as literal content`);
      }
<<<END>>>